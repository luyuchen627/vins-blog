(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{312:function(i,e,v){"use strict";v.r(e);var a=v(0),t=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var i=this,e=i.$createElement,v=i._self._c||e;return v("div",{staticClass:"content"},[v("h2",{attrs:{id:"sass-常用内置函数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#sass-常用内置函数","aria-hidden":"true"}},[i._v("#")]),i._v(" sass-常用内置函数")]),i._v(" "),v("h3",{attrs:{id:"颜色函数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#颜色函数","aria-hidden":"true"}},[i._v("#")]),i._v(" 颜色函数")]),i._v(" "),v("ol",[v("li",[v("p",[i._v("rgb($red, $green, $blue):           从红色, 绿色, 蓝色和中创建一个颜色")])]),i._v(" "),v("li",[v("p",[i._v("rgba($red, $green, $blue, $alpha)")])]),i._v(" "),v("li",[v("p",[i._v("red($color):                        获取颜色的红色分量")])]),i._v(" "),v("li",[v("p",[i._v("green($color):                      获取颜色的绿色成分")])]),i._v(" "),v("li",[v("p",[i._v("blue($color):                       获取颜色的蓝色分量")])]),i._v(" "),v("li",[v("p",[i._v("mix($color1, $color2, [$weight]):   将两种颜色混合在一起")])]),i._v(" "),v("li",[v("p",[i._v("hsl($hue, $saturation, $lightness): 从色调, 饱和度和渐变中创建一个颜色")])]),i._v(" "),v("li",[v("p",[i._v("hsla($hue, $saturation, $lightness, $alpha)")])]),i._v(" "),v("li",[v("p",[i._v("hue($color):                        获取颜色的hue组件")])]),i._v(" "),v("li",[v("p",[i._v("saturation($color):                获取颜色的饱和度分量")])]),i._v(" "),v("li",[v("p",[i._v("lightness($color):                 获取颜色的亮度分量")])]),i._v(" "),v("li",[v("p",[i._v("adjust-hue($color, $degrees):      改变颜色的色调")])]),i._v(" "),v("li",[v("p",[i._v("lighten($color, $amount):          使颜色变浅")])]),i._v(" "),v("li",[v("p",[i._v("darken($color, $amount):           使颜色变深")])]),i._v(" "),v("li",[v("p",[i._v("saturate($color, $amount):         使颜色更饱和")])]),i._v(" "),v("li",[v("p",[i._v("desaturate($color, $amount):       使颜色不饱和")])]),i._v(" "),v("li",[v("p",[i._v("grayscale($color):                 将颜色转换为灰度")])]),i._v(" "),v("li",[v("p",[i._v("complement($color):                返回颜色的补码")])]),i._v(" "),v("li",[v("p",[i._v("invert($color, [$weight]):         返回颜色的倒数")])])]),i._v(" "),v("h3",{attrs:{id:"字符串函数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#字符串函数","aria-hidden":"true"}},[i._v("#")]),i._v(" 字符串函数")]),i._v(" "),v("ol",[v("li",[i._v("unquote($string): 从字符串中删除引号")]),i._v(" "),v("li",[i._v("quote($string): 在字符串中添加引号")]),i._v(" "),v("li",[i._v("str-length($string): 返回字符串中的字符数")]),i._v(" "),v("li",[i._v("str-insert($string, $insert, $index): 在"),v("code",[i._v("$index")]),i._v("中将"),v("code",[i._v("$insert")]),i._v("插入"),v("code",[i._v("$string")])]),i._v(" "),v("li",[i._v("str-index($string, $substring): 返回"),v("code",[i._v("$string")]),i._v("中第一次出现"),v("code",[i._v("$substring")]),i._v("的索引")]),i._v(" "),v("li",[i._v("str-slice($string, $start-at, [$end-at]): 从"),v("code",[i._v("$string")]),i._v("中提取子字符串")]),i._v(" "),v("li",[i._v("to-upper-case($string): 将字符串转换为大写")]),i._v(" "),v("li",[i._v("to-lower-case($string): 将字符串转换为小写")])]),i._v(" "),v("h3",{attrs:{id:"数字函数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数字函数","aria-hidden":"true"}},[i._v("#")]),i._v(" 数字函数")]),i._v(" "),v("ol",[v("li",[i._v("percentage($number): 将无单位数转换为百分比")]),i._v(" "),v("li",[i._v("round($number): 将数字舍入到最接近的整数")]),i._v(" "),v("li",[i._v("ceil($number): 将一个数字舍入到下一个整数")]),i._v(" "),v("li",[i._v("floor($number): 将数字减少到前一个整数")]),i._v(" "),v("li",[i._v("abs($number): 返回数字的绝对值")]),i._v(" "),v("li",[i._v("min($numbers ...): 找到几个数字的最小值")]),i._v(" "),v("li",[i._v("max($numbers ...): 查找最多几个数字")]),i._v(" "),v("li",[i._v("random(): 返回一个随机数")])]),i._v(" "),v("h3",{attrs:{id:"列表函数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#列表函数","aria-hidden":"true"}},[i._v("#")]),i._v(" 列表函数")]),i._v(" "),v("p",[i._v("Sass中的list是不可变的; 所有列表函数都返回一个新列表, 而不是就地更新现有列表\n所有list函数也适用于map, 将它们视为对列表")]),i._v(" "),v("ol",[v("li",[i._v("length($list): 返回列表的长度")]),i._v(" "),v("li",[i._v("nth($list, $n): 返回列表中的特定项")]),i._v(" "),v("li",[i._v("set-nth($list, $n, $value): 替换列表中的第n个项目")]),i._v(" "),v("li",[i._v("join($list1, $list2, [$separator, $bracketed]): 将两个列表合并为一个")]),i._v(" "),v("li",[i._v("append($list1, $val, [$separator]): 将单个值追加到列表的末尾")]),i._v(" "),v("li",[i._v("zip($lists ...): 将多个列表组合到一个多维列表中")]),i._v(" "),v("li",[i._v("index($list, $value): 返回列表中值的位置")]),i._v(" "),v("li",[i._v("list-separator($list): 返回列表的分隔符")]),i._v(" "),v("li",[i._v("is-bracketed($list): 返回列表是否包含方括号")])]),i._v(" "),v("h3",{attrs:{id:"数组函数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数组函数","aria-hidden":"true"}},[i._v("#")]),i._v(" 数组函数")]),i._v(" "),v("p",[i._v("map和list一样，也是不变的; 所有map函数都返回一个新map, 而不是就地更新现有map")]),i._v(" "),v("ol",[v("li",[i._v("map-get($map, $key): 返回与给定键关联的映射中的值")]),i._v(" "),v("li",[i._v("map-merge($map1, $map2): 将两个map合并为一个新map")]),i._v(" "),v("li",[i._v("map-remove($map, $keys ...): 返回一个删除了键的新map")]),i._v(" "),v("li",[i._v("map-keys($map): 返回map中所有键的列表")]),i._v(" "),v("li",[i._v("map-values($map): 返回map中所有值的列表")]),i._v(" "),v("li",[i._v("map-has-key($map, $key): 返回map是否具有与给定键关联的值")]),i._v(" "),v("li",[i._v("keywords($args): 返回传递给带变量参数的函数的关键字")])]),i._v(" "),v("h3",{attrs:{id:"内置函数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#内置函数","aria-hidden":"true"}},[i._v("#")]),i._v(" 内置函数")]),i._v(" "),v("ol",[v("li",[v("p",[i._v("feature-exists($feature): 返回当前Sass运行时中是否存在某个功能")])]),i._v(" "),v("li",[v("p",[i._v("variable-exists($name): 返回当前作用域中是否存在具有给定名称的变量")])]),i._v(" "),v("li",[v("p",[i._v("global-variable-exists($name): 返回全局范围内是否存在具有给定名称的变量")])]),i._v(" "),v("li",[v("p",[i._v("function-exists($name): 返回是否存在具有给定名称的函数")])]),i._v(" "),v("li",[v("p",[i._v("mixin-exists($name): 返回是否存在具有给定名称的mixin")])]),i._v(" "),v("li",[v("p",[i._v("content-exists(): 返回当前mixin是否传递了内容块")])]),i._v(" "),v("li",[v("p",[i._v("inspect($value): 返回值在Sass中表示的字符串表示形式")])]),i._v(" "),v("li",[v("p",[i._v("type-of($value): 返回值的类型")])]),i._v(" "),v("li",[v("p",[i._v("unit($number): 返回与数字关联的单位")])]),i._v(" "),v("li",[v("p",[i._v("unitless($number): 返回一个数字是否有单位")])]),i._v(" "),v("li",[v("p",[i._v("compare($number1, $number2): 返回是否可以添加, 减去或比较两个数字")])]),i._v(" "),v("li",[v("p",[i._v("call($function, $args ...): 动态调用"),v("code",[i._v("get-function")]),i._v("返回的Sass函数引用")])]),i._v(" "),v("li",[v("p",[i._v("get-function($name, $css: false): 在当前词法范围内查找具有给定名称的函数")])])]),i._v(" "),v("h3",{attrs:{id:"if语句"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#if语句","aria-hidden":"true"}},[i._v("#")]),i._v(" if语句")]),i._v(" "),v("p",[i._v("if($condition, $if-true, $if-false):  $condition为真, 返回$if-true, 否则返回$if-false")])])}],!1,null,null,null);e.default=t.exports}}]);