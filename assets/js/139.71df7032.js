(window.webpackJsonp=window.webpackJsonp||[]).push([[139],{258:function(t,e,s){"use strict";s.r(e);var a=s(0),r=Object(a.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),s("p",[t._v("模型：源模型Person, 目标模型Team")]),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),s("p",[t._v("HasOne和BelongsTo将关联键插入到彼此不同的模型中。")]),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),s("p",[t._v("模型：源模型Person, 目标模型Team")]),t._v(" "),t._m(17),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),s("p",[s("a",{attrs:{href:"http://docs.sequelizejs.com/manual/tutorial/associations.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("sequelizejs官网"),s("OutboundLink")],1)])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"sequelizejs-关联"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sequelizejs-关联","aria-hidden":"true"}},[this._v("#")]),this._v(" sequelizejs-关联")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"一对一"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一对一","aria-hidden":"true"}},[this._v("#")]),this._v(" 一对一")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"外键"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#外键","aria-hidden":"true"}},[this._v("#")]),this._v(" 外键")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("默认情况下，将从目标模型名称和目标主键名称生成belongsTo关系的外键。")]),this._v(" "),e("li",[this._v("可以使用as或者foreignKey选项来更改外键")]),this._v(" "),e("li",[this._v("默认使用camelCase，如果源模型配置underscored: true 则使用underscored")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"目标键"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#目标键","aria-hidden":"true"}},[this._v("#")]),this._v(" 目标键")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("目标键是源模型上的外键列指向的目标模型上的列")]),this._v(" "),e("li",[this._v("默认情况下，belongsTo关系的目标键将是目标模型的主键。要定义自定义列，请使用该targetKey选项")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"关联"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#关联","aria-hidden":"true"}},[this._v("#")]),this._v(" 关联")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"源模型-belongsto"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#源模型-belongsto","aria-hidden":"true"}},[this._v("#")]),this._v(" 源模型: "),e("strong",[this._v("belongsTo")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("Person.belongsTo(Team)  >> person.teamId -> team")]),this._v(" "),e("li",[this._v("Person.belongsTo(Team, { as: 'myteam' })  >> person.myteamId -> team")]),this._v(" "),e("li",[this._v("Person.belongsTo(Team, { foreignKey: 'myteam' })  >> person.myteam -> team")]),this._v(" "),e("li",[this._v("Person.belongsTo(Team, {foreignKey: 'myteam', targetKey: 'pid'})  >> person.myteam -> team.pid")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"目标模型-hasone"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#目标模型-hasone","aria-hidden":"true"}},[this._v("#")]),this._v(" 目标模型: "),e("strong",[this._v("hasOne")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("Team.hasOne(Person)  >> person.teamId -> team"),s("br"),t._v("\nTeam.prototype 会添加 "),s("strong",[t._v("getUser")]),t._v(" 和 "),s("strong",[t._v("setUser")])]),t._v(" "),s("li",[t._v("Team.hasOne(Person, { as: 'myteam' })  >> person.myteamId -> team\nTeam.prototype 会添加 "),s("strong",[t._v("getMyteam")]),t._v(" 和 "),s("strong",[t._v("setMyteam")])]),t._v(" "),s("li",[t._v("Team.hasOne(Person, { foreignKey: 'myteam' })  >> person.myteam -> team")]),t._v(" "),s("li",[t._v("Team.hasOne(Person, {foreignKey: 'myteam', targetKey: 'pid'})  >> person.myteam -> team.pid")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"两种模型的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#两种模型的区别","aria-hidden":"true"}},[this._v("#")]),this._v(" 两种模型的区别")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("HasOne在目标模型中插入关联键")]),this._v(" "),e("li",[this._v("BelongsTo 在源模型中插入关联键")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"一对多"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一对多","aria-hidden":"true"}},[this._v("#")]),this._v(" 一对多")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("一对多的关联使用"),e("strong",[this._v("hasMany")]),this._v("，使用方法和一对一的"),e("strong",[this._v("hasOne")]),this._v("关联模型基本相同\n关联不同列上的记录，使用sourceKey选项")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"多对多"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#多对多","aria-hidden":"true"}},[this._v("#")]),this._v(" 多对多")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("多对多的关联使用"),e("strong",[this._v("belongsToMany")]),this._v("方法，同时在"),e("strong",[this._v("through")]),this._v("指定一个连接模型")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("Person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("belongsToMany")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Team"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("through"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'TeamPerson'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nTeam"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("belongsToMany")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("through"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'TeamPerson'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("这会创建一个"),s("strong",[t._v("TeamPerson")]),t._v("模型，同时会在Person上添加"),s("strong",[t._v("getTeams")]),t._v("，"),s("strong",[t._v("setTeams")]),t._v("，"),s("strong",[t._v("addTeam")]),t._v("，"),s("strong",[t._v("addTeams")]),t._v("，在User上添加"),s("strong",[t._v("getPersons")]),t._v("，"),s("strong",[t._v("setPersons")]),t._v("，"),s("strong",[t._v("addPerson")]),t._v("，"),s("strong",[t._v("addPersons")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("另外仍然可以用"),e("strong",[this._v("as")]),this._v("修改别名，用"),e("strong",[this._v("foreignKey")]),this._v("指定外键，用"),e("strong",[this._v("otherKey")]),this._v("指定目标建")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考","aria-hidden":"true"}},[this._v("#")]),this._v(" 参考")])}],!1,null,null,null);e.default=r.exports}}]);